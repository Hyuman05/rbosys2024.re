#!/usr/bin/python3
#SPDX-FileCopyrightText: 2024 Hyuta Sasaki 
#SPDX-Licence-Indentifier: BSD-3-Clause
import random
import sys

def get_probabilities_a():
    #　おみくじの確率
    basenakami_a = [ "大吉", "吉", "中吉", "小吉", "末吉", "凶","大凶" ]
    baseprobabilities_a = [0.14, 0.14, 0.14, 0.16, 0.14, 0.14,0.14]

    return basenakami_a, baseprobabilities_a

def get_probabilities_b():
    #　おみくじの確率
    basenakami_b = [ "大吉", "吉", "中吉", "小吉", "末吉", "凶","大凶" ]
    baseprobabilities_b = [0.07, 0.14, 0.21, 0.16, 0.21, 0.14,0.07]

    return basenakami_b, baseprobabilities_b

def get_probabilities_c():
    #　おみくじの確率
    basenakami_c = [ "大吉", "吉", "中吉", "末吉", "凶","大凶" ]
    baseprobabilities_c = [0.22, 0.21, 0.7, 0.7, 0.21,0.22]

    return basenakami_c, baseprobabilities_c

def get_probabilities_d():
    #　おみくじの確率
    basenakami_d = [ "大吉", "大凶" ]
    baseprobabilities_d = [0.5, 0.5]

    return basenakami_d, baseprobabilities_d

def get_probabilities_e():
    #　おみくじの確率
    basenakami_e = [ "大吉",  "凶","大凶" ]
    baseprobabilities_e= [0.4, 0.3, 0.3]

    return basenakami_e, baseprobabilities_e

def get_probabilities_f():
    #　おみくじの確率
    basenakami_f = [ "大吉", "吉", "中吉", "小吉", "末吉", "凶","大凶" ]
    baseprobabilities_f = [0.14, 0.14, 0.14, 0.16, 0.14, 0.14,0.14]

    return basenakami_f, baseprobabilities_f

def get_probabilities_g():
    #　おみくじの確率
    basenakami_g = [ "大吉", "吉", "中吉", "小吉", "末吉",  ]
    baseprobabilities_g = [0.05, 0.1, 0.25, 0.3, 0.3, ]

    return basenakami_g, baseprobabilities_g

def get_probabilities_h():
    #　おみくじの確率
    basenakami_h = [ "大吉", "大凶" ]
    baseprobabilities_h = [0.7, 0.3]

    return basenakami_h, baseprobabilities_h

def draw_omikuji(month, day):
    if month == day:
        nakami, probabilities = get_probabilities_h()
    
    else:
        #月と日を足し合わせる
        total = month + day
        if total % 7 == 0:
            nakami, probabilities = get_probabilities_a()

        elif total % 7 == 1:
            nakami, probabilities = get_probabilities_b()

        elif total % 7 == 2:
            nakami, probabilities = get_probabilities_c()

        elif total % 7 == 3:
            nakami, probabilities = get_probabilities_d()
    
        elif total % 7 == 4:
            nakami, probabilities = get_probabilities_e()
    
        elif total % 7 == 5:
            nakami, probabilities = get_probabilities_f()
    
        else:
            nakami, probabilities = get_probabilities_g()
    
    #　確率に基づいて結果を選ぶ
    result = random.choices(nakami, probabilities)[0]
    print(f"今日の運勢は: {result}")

if __name__ == "__main__":
    try:
        if len(sys.argv) > 1:
            date= sys.argv[1]
        else:
            date= sys.stdin.readline().strip()
            
        month, day = map(int,date.split("/"))

        if 1 <= month <= 12 and 1 <= day <= 31:
            draw_omikuji(month ,day)
            sys.exit(0) #正常終了
        else:
            print("月は1~12、日にちは1~31の範囲で入力してください。")
            sys.exit(1) #異常終了

    except ValueError:
        print("無効な入力です。MM/DDの形式で入力してください。")
        sys.exit(1) #異常終了

    except Exception as e:
        print(f"予期しないエラーが発生しました: {e}", file=sys.stderr)
        sys.exit(2) #想定外のエラー


